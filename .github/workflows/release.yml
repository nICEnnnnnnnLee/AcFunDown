# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: CI

on:
  push:
    paths:
      # Trigger only when src/** changes
      - ".github/release.json"
      
  pull_request:
    paths:
    # Trigger only when src/** changes
      - ".github/release.json"

jobs:
  build:

    runs-on: ubuntu-latest
   
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
     
    - name: Read tag_latest
      id: tag_latest
      uses:  ashley-taylor/read-json-property-action@v1.0
      with:
        path: ./.github/release.json
        property: tag_latest
        
    - name: Read description
      id: description
      uses: juliangruber/read-file-action@v1
      with:
        path: ./.github/release.info
 
    - name: Package Jar
      run: |
        # 复制整个文件夹
        mkdir target
        cp -r src/. target

        # 删除不需要的java文件
        rm -rf ./target/nicelee/test

        # 获取java文件列表
        cd target
        find `pwd` -name "*.java" > ../sources.txt
        cd ..

        # 获取环境变量,解压lib包
        cd libs
        find `pwd` -name "*.jar" > ../libs.txt
        cat ../libs.txt
        cd ../target
        for jar in  `cat ../libs.txt`
        do
            jclasspath=$jar:$jclasspath
            echo $jar
            jar xvf $jar
        done
        cd ..
        echo $jclasspath

        # 编译java
        javac -cp $jclasspath -encoding UTF-8 @sources.txt

        # 删除所有.java文件
        cd target
        find . -name "*.java" |xargs rm -rf {}
        cd ..

        # 打包
        jar cvfe ILikeAcFun.jar nicelee.ui.FrameMain -C ./target .

    - name: ZIP files
      run: |
        rm -rf ./config
        rm -rf ./LICENSE
        mkdir ./config/
        mkdir ./LICENSE/
        mv -f ./release/install.vbs .
        mv -f ./release/run-UI.bat .
        mv -f ./release/run-UI-debug.bat .
        mv -f ./release/uninstall.bat .
        mv -f ./release/update.bat .
        mv -f ./release/config/* ./config/
        mv -f ./release/LICENSE/* ./LICENSE/        
        
        zip AcfunDown.v${{steps.tag_latest.outputs.value}}.release.zip ILikeAcFun.jar
        zip -m AcfunDown.v${{steps.tag_latest.outputs.value}}.release.zip ./install.vbs
        zip -m AcfunDown.v${{steps.tag_latest.outputs.value}}.release.zip ./run-UI.bat
        zip -m AcfunDown.v${{steps.tag_latest.outputs.value}}.release.zip ./run-UI-debug.bat
        zip -m AcfunDown.v${{steps.tag_latest.outputs.value}}.release.zip ./uninstall.bat
        zip -m AcfunDown.v${{steps.tag_latest.outputs.value}}.release.zip ./update.bat
        zip -rm AcfunDown.v${{steps.tag_latest.outputs.value}}.release.zip ./config/
        zip -rm AcfunDown.v${{steps.tag_latest.outputs.value}}.release.zip ./LICENSE/

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: V${{steps.tag_latest.outputs.value}}
        release_name: AcfunDown - v${{steps.tag_latest.outputs.value}}
        body: |
          ${{steps.description.outputs.content}}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./AcfunDown.v${{steps.tag_latest.outputs.value}}.release.zip
        asset_name: AcfunDown.v${{steps.tag_latest.outputs.value}}.release.zip
        asset_content_type: application/zip